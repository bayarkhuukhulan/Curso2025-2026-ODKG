[
  {
    "op": "core/column-removal",
    "columnName": "OBJECTID_1",
    "description": "Remove column OBJECTID_1"
  },
  {
    "op": "core/column-move",
    "columnName": "OBJECTID",
    "index": 0,
    "description": "Move column OBJECTID to position 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "X",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column X using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Y",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Y using expression value.trim()"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Starred rows",
          "expression": "row.starred",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Starred rows",
          "expression": "row.starred",
          "columnName": "",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "X",
    "newColumnName": "Longitude",
    "description": "Rename column X to Longitude"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Y",
    "newColumnName": "Latitude",
    "description": "Rename column Y to Latitude"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Texto",
    "newColumnName": "University",
    "description": "Rename column Texto to University"
  },
  {
    "op": "core/column-move",
    "columnName": "University",
    "index": 0,
    "description": "Move column University to position 0"
  },
  {
    "op": "core/column-removal",
    "columnName": "OBJECTID",
    "description": "Remove column OBJECTID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "University",
    "expression": "grel:md5(value.trim().toLowercase())",
    "onError": "set-to-blank",
    "newColumnName": "UniversityID",
    "columnInsertIndex": 1,
    "description": "Create column UniversityID at index 1 based on column University using expression grel:md5(value.trim().toLowercase())"
  },
  {
    "op": "core/column-removal",
    "columnName": "UniversityID",
    "description": "Remove column UniversityID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "University",
    "expression": "grel:md5(value.trim().toLowercase())",
    "onError": "set-to-blank",
    "newColumnName": "UniversityID",
    "columnInsertIndex": 1,
    "description": "Create column UniversityID at index 1 based on column University using expression grel:md5(value.trim().toLowercase())"
  },
  {
    "op": "core/column-removal",
    "columnName": "UniversityID",
    "description": "Remove column UniversityID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "University",
    "expression": "grel:md5(value.trim().toLowercase())",
    "onError": "set-to-blank",
    "newColumnName": "UnirvesityID",
    "columnInsertIndex": 1,
    "description": "Create column UnirvesityID at index 1 based on column University using expression grel:md5(value.trim().toLowercase())"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "UnirvesityID",
    "newColumnName": "UniversityID",
    "description": "Rename column UnirvesityID to UniversityID"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "University",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column University using expression value.trim()"
  },
  {
    "op": "core/column-removal",
    "columnName": "UniversityID",
    "description": "Remove column UniversityID"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "University",
    "urlExpression": "grel:md5(\n  value.trim()\n       .toLowercase()\n       .replace(/[áàäâ]/,\"a\")\n       .replace(/[éèëê]/,\"e\")\n       .replace(/[íìïî]/,\"i\")\n       .replace(/[óòöô]/,\"o\")\n       .replace(/[úùüû]/,\"u\")\n       .replace(/[ÁÀÄÂ]/,\"a\")\n       .replace(/[ÉÈËÊ]/,\"e\")\n       .replace(/[ÍÌÏÎ]/,\"i\")\n       .replace(/[ÓÒÖÔ]/,\"o\")\n       .replace(/[ÚÙÜÛ]/,\"u\")\n)",
    "onError": "set-to-blank",
    "newColumnName": "UniversityID",
    "columnInsertIndex": 1,
    "delay": 500,
    "cacheResponses": true,
    "httpHeadersJson": [
      {
        "name": "authorization",
        "value": ""
      },
      {
        "name": "if-modified-since",
        "value": ""
      },
      {
        "name": "accept-language",
        "value": ""
      },
      {
        "name": "accept-encoding",
        "value": ""
      },
      {
        "name": "user-agent",
        "value": "OpenRefine 3.9.5 [TRUNK]"
      },
      {
        "name": "accept",
        "value": "*/*"
      },
      {
        "name": "accept-charset",
        "value": ""
      }
    ],
    "description": "Create column UniversityID at index 1 by fetching URLs based on column University using expression grel:md5(\n  value.trim()\n       .toLowercase()\n       .replace(/[áàäâ]/,\"a\")\n       .replace(/[éèëê]/,\"e\")\n       .replace(/[íìïî]/,\"i\")\n       .replace(/[óòöô]/,\"o\")\n       .replace(/[úùüû]/,\"u\")\n       .replace(/[ÁÀÄÂ]/,\"a\")\n       .replace(/[ÉÈËÊ]/,\"e\")\n       .replace(/[ÍÌÏÎ]/,\"i\")\n       .replace(/[ÓÒÖÔ]/,\"o\")\n       .replace(/[ÚÙÜÛ]/,\"u\")\n)"
  },
  {
    "op": "core/column-removal",
    "columnName": "UniversityID",
    "description": "Remove column UniversityID"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "University",
    "expression": "grel:md5(\n  value.trim()\n       .toLowercase()\n       .replace(/[áàäâ]/,\"a\")\n       .replace(/[éèëê]/,\"e\")\n       .replace(/[íìïî]/,\"i\")\n       .replace(/[óòöô]/,\"o\")\n       .replace(/[úùüû]/,\"u\")\n       .replace(/[ÁÀÄÂ]/,\"a\")\n       .replace(/[ÉÈËÊ]/,\"e\")\n       .replace(/[ÍÌÏÎ]/,\"i\")\n       .replace(/[ÓÒÖÔ]/,\"o\")\n       .replace(/[ÚÙÜÛ]/,\"u\")\n)",
    "onError": "set-to-blank",
    "newColumnName": "UniversityID",
    "columnInsertIndex": 1,
    "description": "Create column UniversityID at index 1 based on column University using expression grel:md5(\n  value.trim()\n       .toLowercase()\n       .replace(/[áàäâ]/,\"a\")\n       .replace(/[éèëê]/,\"e\")\n       .replace(/[íìïî]/,\"i\")\n       .replace(/[óòöô]/,\"o\")\n       .replace(/[úùüû]/,\"u\")\n       .replace(/[ÁÀÄÂ]/,\"a\")\n       .replace(/[ÉÈËÊ]/,\"e\")\n       .replace(/[ÍÌÏÎ]/,\"i\")\n       .replace(/[ÓÒÖÔ]/,\"o\")\n       .replace(/[ÚÙÜÛ]/,\"u\")\n)"
  }
]